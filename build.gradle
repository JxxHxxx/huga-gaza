buildscript {
    repositories {
        mavenLocal()
        maven { url 'https://maven.aliyun.com/repository/google/' }
        maven { url 'https://maven.aliyun.com/repository/public/' }
        maven { url 'https://maven.aliyun.com/repository/spring/' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin/' }
        maven { url 'https://maven.aliyun.com/repository/spring-plugin/' }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:3.0.5")
        classpath "io.spring.gradle:dependency-management-plugin:1.1.0.RELEASE"
    }
}

plugins {
    id 'java'
}

apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"

bootJar.enabled = false

group = 'com.jxx'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = 'com.jxx'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '17'
    targetCompatibility = '17'
    compileJava.options.encoding = 'UTF-8'

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

        //lombok
        annotationProcessor 'org.projectlombok:lombok'
        compileOnly 'org.projectlombok:lombok'
        testCompileOnly 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'

        implementation 'org.springframework.boot:spring-boot-starter'
    }

    test {
        useJUnitPlatform()
    }
}

project(':vacation-core') {

    bootJar { enabled = false }
    jar { enabled = true }

    dependencies {
        //database
        runtimeOnly 'com.mysql:mysql-connector-j'
        // company
//        runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc'
        testImplementation 'com.h2database:h2'

        implementation 'org.springframework.data:spring-data-envers'

        // json 타입 컬럼을 사용하기 위한 프로젝트 START
        implementation 'io.hypersistence:hypersistence-utils-hibernate-60:3.7.0'
        implementation 'com.fasterxml.jackson.module:jackson-module-jakarta-xmlbind-annotations'
        // json 타입 컬럼을 사용하기 위한 프로젝트 START END

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }
}

project(':vacation-api') {

    bootJar {
        enabled = true
    }
    jar {
        enabled = false
    }

    dependencies {
        implementation project(':vacation-core')
        //web
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-validation'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }
}

project(':vacation-batch') {

    bootJar {
        enabled = true
    }
    jar {
        enabled = false
    }

    dependencies {
        implementation project(':vacation-core')
        //web
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-batch'
        implementation 'org.springframework.boot:spring-boot-starter-quartz'
        implementation 'org.springframework.boot:spring-boot-starter-validation'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.springframework.batch:spring-batch-test'
    }
}

project(':vacation-messaging') {

    bootJar {
        enabled = true
    }
    jar {
        enabled = false
    }

    dependencies {
        implementation project(':vacation-core')
        //messaging
        implementation 'org.springframework.boot:spring-boot-starter-validation'

        implementation 'org.springframework.boot:spring-boot-starter-integration'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.integration:spring-integration-jpa'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }
}
